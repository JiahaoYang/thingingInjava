初始化
1)在定义对象的地初始化
2)构造器
3)惰性初始化（在使用对象之前）
4)实例初始化（在{}中）

包访问权限的父类中的public方法可以被不同包的子类继承
http://blog.csdn.net/justloveyou_/article/details/61672133  protected修饰符
protected方法调用合法性取决于调用者所在类与方法从根源上看所在的类共包或者是其直接子类

基类子对象被包含在导出类对象内部（子类对象确实拥有父类对象中所有的属性和方法，但是父类对象中的私有属性和方法，子类是无法访问到的，只是拥有，但不能使用。）
除了内存以外，不依赖垃圾回收器作任何工作
基类中含有被重载的方法，在导出类中重新定义该方法不会屏蔽基类的任何版本（与c++不同）

判断是否使用继承：是否需要新类到基类的向上转型

public static final int VALUE = 23; 编译时期的常量（可用随机数在运行时确定值）
空白final：在构造器中为其赋值
禁止覆盖，将方法设置为final